---
layout: post
title:  "Google sign in Ionic with capacitor-firebase-auth - draft"
date:   2022-05-10 10:51:03 +0200
categories:
---

In this post I am going to show you how to implement Firebase Authentication with Google provider for Ionic web and android app with a help of Capacitor plugin for Firebase Authentication [capacitor-firebase-auth](https://github.com/baumblatt/capacitor-firebase-auth). 

**Requirements**: Installed Node, Ionic CLI and Android Studio.

Project code can be found [here](https://github.com/jelicas/ionic-firebase-auth)

# Create Ionic project

First of all we are going to create a blank ionic-angular project with a following command:

`ionic start ionic-firebase-auth blank`

Open the project and generate a new page (you could also use the home page which is generated by default).

`ionic generate page sign-in`

Change route redirection to the sign-in page.

src/app/app-routing.module.ts
![Redirection](/assets/images/route-redirect.png)

Add button for google sign in.

{:refdef: style="text-align: center;"}
sign-in/sign-in.page.html
![Signin.html](/assets/images/signin.png)
{: refdef}

Add capacitor-firebase-auth package and install a specific 8.3.0 version of the firebase package which is compatible with capacitor-firebase-auth package.

`npm install --save capacitor-firebase-auth`

`npm install --save firebase@8.3.0`

# Firebase project 

Go to [Firebase console](https://console.firebase.google.com) and add a new project. Give it a name (I named it ionic-firebase-auth).

# Firebase Google Auth provider setup
In side menu on the left go to Authentication and click on Get Started button.

![Auth start](/assets/images/authstart.png)

Go to Sign-in method and choose Google provider. Enable it with a toggle button, then change Project public-facing name and select support mail. Click the save button.

![Google enable](/assets/images/authenablegoogle.png)

# Firebase setup for Web App

On the Project overview page you can get started by choosing to add Firebase to web app or go to Project settings and register the web app.

![Firebase web app](/assets/images/firebasewebappgetstarted.png)

Choose a nickname for your app and then copy firebase config to src/app/environments/environment.ts as shown on a picture below.

{:refdef: style="text-align: center;"}
![Firebase config](/assets/images/firebaseconfig.png)
{: refdef}

Initialize firebase 

{:refdef: style="text-align: center;"}
src/app/app.module.ts
![Initailize firebase](/assets/images/initfirebase.png)
{: refdef}

Add method signInWithGoogle()

{:refdef: style="text-align: center;"}
app/src/sign-in/sign-in.page.ts
![Sign in with google method](/assets/images/signinwithgmethod.png)
{: refdef}

Call signInWithGoogle method when button is clicked.

{:refdef: style="text-align: center;"}
app/src/sign-in/sign-in.page.html
![Sign in button](/assets/images/signinbutton.png)
{: refdef}


Now, when a user clicks on google sign in button, a popup will be shown for signing in with google. 

![Chrome pop up](/assets/images/chromepopup.png)

If signing in is successful in devtools for Chrome in console logs you should see user data for registered user. 

![Console log](/assets/images/consolelog.png)

Checking Authentication in firebase project you should see the user registered.

![Firebase user](/assets/images/firebaseuser.png)

Now, when everything works fine in web app, we are going to setup android app.

# Add Android to Project

Update capacitor.config.ts file as follows. 

{:refdef: style="text-align: center;"}
![Capcitor config](/assets/images/capacitorconfig.png)
{: refdef}

Build Ionic project with following command:

{:refdef: style="text-align: center;"}
`ionic build`
{: refdef}

Add android to project:

{:refdef: style="text-align: center;"}
`ionic capacitor add android`
{: refdef}

Open generated android folder in android studio and change to project view

![Andorid project view](/assets/images/projectview.png)

# Firebase Google provider setup for Android App:

As mentioned in Firebase: Google sign-in is automatically configured on your connected Apple and web apps. To set up Google sign-in for your Android apps, you need to add the SHA1 fingerprint for each app on your Project Settings.
For Linux and MacOS run command:

{:refdef: style="text-align: center;"}
`keytool -list -v -alias androiddebugkey -keystore ~/.android/debug.keystore`
{: refdef}

Password is android. 

Go to Project settings.

![Firebase project settings](/assets/images/projectsettings.png)

Add Android app.

![Add android app](/assets/images/addandroidapp.png)

I named it com.ionicfirebaseauth.mobile (remember that appId in capcitor.config.ts file has the same name). Copy previously generated SHA1 value from terminal. Click Register app.

![Register android app](/assets/images/registerapp.png)

Download google-services.json file. Get back to Android studio. Copy google.services.json to android/app folder.

![google-services.json](/assets/images/googleservices.png)

Then, open AndroidManifest file and make sure package name is appropriate

android/app/src/main/AndroidManifest

{:refdef: style="text-align: center;"}
`<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.ionicfirebaseauth.mobile">`
{: refdef}

Follow instructions from Firebase for adding firebase SDK in the project.

In Project-level build.gradle if not there add following line.

android/build.gradle

dependencies {
        ...
   // Add this line
    classpath 'com.google.gms:google-services:4.3.10'
}

![android/build.gradle](/assets/images/gradle.png)


In app-level build.gradle add following lines.

android/app/build.gradle

    apply plugin: 'com.google.gms.google-services'

​​    dependencies {
        
        // Import the Firebase BoM

        implementation platform('com.google.firebase:firebase-bom:29.3.1')
    }


![android/app/build.gradle](/assets/images/appgradle.png)


Update MainActivity.java file as follows.

app/src/main/java/../MainActivity.java

`package com.ionicfirebaseauth.mobile;`

`import android.os.Bundle;`

`import com.getcapacitor.BridgeActivity;`

`import com.baumblatt.capacitor.firebase.auth.CapacitorFirebaseAuth;`

`import com.getcapacitor.Plugin;`

`import java.util.ArrayList;`

`public class MainActivity extends BridgeActivity {`

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        this.init(savedInstanceState, new ArrayList<Class<? extends Plugin>>() {
            {
            add(CapacitorFirebaseAuth.class);
            }
        }
        );
    }

`}`

![Main activity](/assets/images/mainactivity.png)

Sync project with gradle files. (File/Sync Project with Gradle Files)

Make a project and run it on an avd emulator (Pixel 2 API 28).

![Emulator](/assets/images/emulator.png)
